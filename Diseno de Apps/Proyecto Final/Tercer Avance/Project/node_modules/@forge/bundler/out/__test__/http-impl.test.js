"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const http_impl_1 = require("../http-impl");
const url_1 = require("url");
jest.mock('@forge/api', () => ({}));
describe('convertToForgeFetchArgs', () => {
    const chainableOptions = {
        headers: {
            chainableOption: 'true'
        }
    };
    describe('options is provided as a string or URL', () => {
        it.each(['optionString', new url_1.URL('https://example.com')])('should produce an object with url = options and init = chainableOptions', (options) => {
            expect(http_impl_1.Request.convertToForgeFetchArgs(options, chainableOptions)).toMatchObject({
                url: options,
                init: chainableOptions
            });
        });
    });
    describe('options is provided as a RequestOptions object', () => {
        const options = { headers: { requestOptions: 'true' }, method: 'GET' };
        const expectedInit = {
            headers: {
                requestOptions: 'true'
            },
            method: 'GET'
        };
        it('should produce an object with init based on a merge of options and chainableOptions, with options overwriting any conflicting fields', () => {
            expect(http_impl_1.Request.convertToForgeFetchArgs(options, chainableOptions)).toMatchObject({
                url: expect.any(String),
                init: expectedInit
            });
        });
    });
});
