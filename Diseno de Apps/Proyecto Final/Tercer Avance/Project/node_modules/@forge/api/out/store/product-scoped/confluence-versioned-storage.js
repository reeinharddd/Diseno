"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const product_scoped_storage_1 = require("./product-scoped-storage");
const errors_1 = require("../errors");
class ConfluenceVersionedStorage extends product_scoped_storage_1.ProductScopedStorage {
    async versionedSet(key, value) {
        const versionResponse = await this.apiClient(`${this.storageApiPath}/${key}`);
        if (!versionResponse.ok && versionResponse.status !== 404) {
            throw new errors_1.StorageAPIError(versionResponse.status);
        }
        const updatedVersionNumber = await this.getUpdatedVersion(versionResponse);
        const requestMethod = versionResponse.ok ? 'PUT' : 'POST';
        const requestBody = {
            value,
            version: {
                number: updatedVersionNumber
            }
        };
        await this.apiClient(`${this.storageApiPath}/${key}`, this.buildSetRequestOptions(requestBody, requestMethod));
    }
    async getUpdatedVersion(versionResponse) {
        if (!versionResponse.ok) {
            return 1;
        }
        else {
            const data = await versionResponse.json();
            return data.version.number + 1;
        }
    }
}
exports.ConfluenceVersionedStorage = ConfluenceVersionedStorage;
