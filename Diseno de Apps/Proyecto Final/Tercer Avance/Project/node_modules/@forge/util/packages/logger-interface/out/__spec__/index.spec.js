"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../index");
describe('isHierachicalLogger', () => {
    it('returns true for NoLogger', () => {
        expect(index_1.isHierachicalLogger(new index_1.NoLogger())).toBe(true);
    });
    it('returns false for loggers that do not have child method', () => {
        expect(index_1.isHierachicalLogger({})).toBe(false);
        expect(index_1.isHierachicalLogger({ child: {} })).toBe(false);
    });
});
describe('NoLogger', () => {
    it('debug does nothing', () => {
        new index_1.NoLogger().debug('value');
    });
    it('info does nothing', () => {
        new index_1.NoLogger().info('value');
    });
    it('warn does nothing', () => {
        new index_1.NoLogger().warn('value');
    });
    it('error does nothing', () => {
        new index_1.NoLogger().error('value');
    });
    it('fatal does nothing', () => {
        new index_1.NoLogger().fatal('value');
    });
    it('child does nothing', () => {
        new index_1.NoLogger().child('opts');
    });
});
describe('isLogger', () => {
    it('returns true for NoLogger', () => {
        expect(index_1.isLogger(new index_1.NoLogger())).toBe(true);
    });
    it('returns false for loggers that do not have logging methods', () => {
        expect(index_1.isLogger({ other: {} })).toBe(false);
    });
});
