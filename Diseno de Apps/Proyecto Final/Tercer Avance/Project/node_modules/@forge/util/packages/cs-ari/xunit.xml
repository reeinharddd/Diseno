<testsuite name="Mocha Tests" tests="97" failures="0" errors="0" skipped="0" timestamp="Mon, 29 Jul 2019 01:39:16 GMT" time="0.08">
<testcase classname="Ari toString" name="should correctly serialise ari when all fields are present" time="0.001"/>
<testcase classname="Ari toString" name="should correctly serialise ari when cloudId is omitted" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when a system wide user context provided" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when resourceId is omitted" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when resourceId and resourceType are omitted" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when resourceOwner contains a full stop" time="0.001"/>
<testcase classname="Ari toString" name="should correctly serialise ari when resourceOwner contains a dash" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when a global system context provided" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when cloudId and resourceId are both UUIDs" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when application wide system context provided" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when site wide context" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when ARI has colon in resource id" time="0"/>
<testcase classname="Ari toString" name="should correctly serialise ari when ARI has path characters in resource id" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when all fields are present" time="0.001"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when cloudId is omitted" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when a system wide user context provided" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when resourceId is omitted" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when resourceId and resourceType are omitted" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when resourceOwner contains a full stop" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when resourceOwner contains a dash" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when a global system context provided" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when cloudId and resourceId are both UUIDs" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when application wide system context provided" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when site wide context" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when ARI has colon in resource id" time="0"/>
<testcase classname="Ari JSON.stringify" name="should correctly serialise ari when ARI has path characters in resource id" time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when ariString is invalid" time="0.002"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceOwner is null" time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceOwner too short" time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceOwner starts with a -" time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceOwner starts with a ." time="0.001"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceType starts with a -" time="0.001"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceType starts with a ." time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when cloudId too short" time="0"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when resourceId contains a %" time="0.001"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when both resourceOwner and cloudId too short" time="0.001"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when a resource id is provided but the cloud id or resource type is not specified" time="0.001"/>
<testcase classname="Ari parse" name="should throw InvalidAriError when a site wide resourceType without a cloudId" time="0"/>
<testcase classname="Ari parse" name="should correctly format ARI in case of site resource type and cloud id" time="0"/>
<testcase classname="Ari parse" name="should correctly format ARI in case of site resource type and resource id" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when all fields are present" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when cloudId is omitted" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when a system wide user context provided" time="0.001"/>
<testcase classname="Ari parse" name="should correctly parse ari when resourceId is omitted" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when resourceId and resourceType are omitted" time="0.001"/>
<testcase classname="Ari parse" name="should correctly parse ari when resourceOwner contains a full stop" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when resourceOwner contains a dash" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when a global system context provided" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when cloudId and resourceId are both UUIDs" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when application wide system context provided" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when site wide context" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when ARI has colon in resource id" time="0"/>
<testcase classname="Ari parse" name="should correctly parse ari when ARI has path characters in resource id" time="0"/>
<testcase classname="Ari urlEncodeAri and urlDecodeAri" name="should be able to urlEncodeAri and urlDecodeAri the ARI" time="0.001"/>
<testcase classname="Ari urlEncodeAri and urlDecodeAri" name="should be able to urlEncodeAri and urlDecodeAri the ARI when a part of resource Id has a /" time="0"/>
<testcase classname="Ari urlEncodeAri and urlDecodeAri" name="should be able to parse a encoded ARI" time="0"/>
<testcase classname="Ari contains" name="should return true when both contexts are the same" time="0.001"/>
<testcase classname="Ari contains" name="should return true when self is broader than other context" time="0"/>
<testcase classname="Ari contains" name="should return false when other context is broader than self" time="0.012"/>
<testcase classname="Ari contains" name="should return false when self resource Id is different than other context resource Id" time="0"/>
<testcase classname="Ari contains" name="should return false when self resource type is different than other context resource type" time="0"/>
<testcase classname="Ari contains" name="should return false when self cloud Id is different than other cloud Id" time="0"/>
<testcase classname="Ari contains" name="should return false when self resource owner is different than other" time="0"/>
<testcase classname="Ari contains" name="should return false when self cloud Id is undefined" time="0"/>
<testcase classname="Ari contains" name="should contain site resource type ARI with cloudIds in different fields" time="0"/>
<testcase classname="Ari cloudId" name="should return cloud ids for site resource type" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an app ari" time="0.003"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an environment group ari" time="0.002"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an environment group ari with version" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an extension group ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when a static extension-group group ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when a defaulted static environment group ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an extension group ari with version" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when a static extension-group group ari with version" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when a defaulted static environment group ari with version" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an extension ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should correctly parse ari when an extension ari with static extension group" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when extra segs on app ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when extra segs on environment ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when extra segs on extension group ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when extra segs on extension ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when too few segs on extension ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when too few segs on extension group ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when too few segs on environment ari" time="0.001"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when too few segs on app ari" time="0"/>
<testcase classname="AppFamilyAri parseAppAri" name="should throw NotAppFamilyAriError when empty segs on extension group ari" time="0.001"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an app ari" time="0.001"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an environment group ari" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an environment group ari with version" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an extension group ari" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when a static extension-group group ari" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when a defaulted static environment group ari" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an extension group ari with version" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when a static extension-group group ari with version" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when a defaulted static environment group ari with version" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an extension ari" time="0"/>
<testcase classname="AppFamilyAri toAri" name="should correctly convert to ari when an extension ari with static extension group" time="0"/>
</testsuite>
