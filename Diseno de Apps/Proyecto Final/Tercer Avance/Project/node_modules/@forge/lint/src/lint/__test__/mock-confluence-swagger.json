{
  "paths": {
    "/api/content/{id}": {
      "get": {
        "tags": ["Content"],
        "summary": "Get content by ID",
        "security": [{
          "oAuthDefinitions": ["read:confluence-content.summary"]
        }],
        "description": "Returns a single piece of content, like a page or a blog post.\n\nBy default, the following objects are expanded: `space`, `history`, `version`.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to view the content. If the content is a blog post, 'View' permission\nfor the space is required.",
        "operationId": "com.atlassian.confluence.plugins.restapi.resources.ContentResource.getContentById_get",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The ID of the content to be returned. If you don't know the content ID,\nuse [Get content](#api-content-get) and filter the results.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "status",
          "in": "query",
          "description": "Filter the results to a set of content based on their status.\nIf set to `any`, content with any status is returned. Note, the\n`historical` status is currently not supported.",
          "required": false,
          "explode": true,
          "schema": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "enum": ["current", "trashed", "draft", "any"],
            "default": "current"
          }
        }, {
          "name": "version",
          "in": "query",
          "description": "The version number of the content to be returned.",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        }, {
          "name": "embeddedContentRender",
          "in": "query",
          "description": "The version of embedded content (e.g. attachments) to render.\n\n- <code>current</code> renders the latest version of the embedded content.\n- <code>version-at-save</code> renders the version of the embedded content\nat the time of save.",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["current", "version-at-save"],
            "default": "current"
          }
        }, {
          "$ref": "#/components/parameters/contentExpand"
        }, {
          "name": "trigger",
          "in": "query",
          "description": "If set to `viewed`, the request will trigger a 'viewed' event for the content.\nWhen this event is triggered, the page/blogpost will appear on the 'Recently visited'\ntab of the user's Confluence dashboard.",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["viewed"]
          }
        }],
        "responses": {
          "200": {
            "description": "Returned if the requested content is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content"
                }
              }
            }
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing\nfrom the request."
          },
          "404": {
            "description": "Returned if;\n\n- There is no content with the given ID.\n- The requesting user does not have permission to view the content."
          }
        },
        "x-atlassian-connect-scope": "READ"
      },
      "put": {
        "tags": ["Content"],
        "summary": "Update content",
        "security": [{
          "oAuthDefinitions": ["write:confluence-content"]
        }],
        "description": "Updates a piece of content. Use this method to update the title or body\nof a piece of content, change the status, change the parent page, and more.\n\nNote, updating draft content is currently not supported.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\nPermission to update the content.",
        "operationId": "com.atlassian.confluence.plugins.restapi.resources.ContentResource.updateContent_put",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The ID of the content to be updated.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "status",
          "in": "query",
          "description": "The updated status of the content. Use this parameter to change the\nstatus of a piece of content without passing the entire request body.",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["current", "trashed", "historical", "draft"],
            "default": "current"
          }
        }, {
          "name": "conflictPolicy",
          "in": "query",
          "description": "The action that should be taken when conflicts are discovered.\nOnly used when publishing a draft page.",
          "required": false,
          "schema": {
            "type": "string",
            "enum": ["abort"],
            "default": "abort"
          }
        }],
        "responses": {
          "200": {
            "description": "Returned if the content is updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Content"
                }
              }
            }
          },
          "400": {
            "description": "Returned if;\n\n- The request body is missing required parameters (version, type, title).\n- The type property has been set incorrectly."
          },
          "401": {
            "description": "Returned if the authentication credentials are incorrect or missing\nfrom the request."
          },
          "404": {
            "description": "Returned if a draft with current content cannot be found when setting the status\nparameter to draft and the content status is current."
          },
          "409": {
            "description": "Returned if;\n\n- The page is a draft (draft pages cannot be updated).\n- The version property has not been set correctly for the content\ntype."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentUpdate"
              }
            }
          },
          "description": "The updated content.",
          "required": true
        },
        "x-atlassian-connect-scope": "WRITE"
      },
      "delete": {
        "tags": ["Content"],
        "summary": "Delete content",
        "security": [{
          "oAuthDefinitions": ["write:confluence-content"]
        }],
        "description": "Moves a piece of content to the space's trash or purges it from the trash,\ndepending on the content's type and status:\n\n- If the content's type is `page` or `blogpost` and its status is `current`,\nit will be trashed.\n- If the content's type is `page` or `blogpost` and its status is `trashed`,\nthe content will be purged from the trash and deleted permanently. Note,\nyou must also set the `status` query parameter to `trashed` in your request.\n- If the content's type is `comment` or `attachment`, it will be deleted\npermanently without being trashed.\n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n'Delete' permission for the space that the content is in, and permission to edit the content.",
        "operationId": "com.atlassian.confluence.plugins.restapi.resources.ContentResource.deleteContent_delete",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "The ID of the content to be deleted.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, {
          "name": "status",
          "in": "query",
          "description": "Set this to `trashed`, if the content's status is `trashed` and you want to purge it.",
          "required": false,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Returned if the content is successfully trashed."
          },
          "204": {
            "description": "Returned if the content is successfully purged."
          },
          "404": {
            "description": "Returned if;\n\n- There is no content with the given ID.\n- The requesting user does not have permission to trash or purge the\ncontent."
          }
        },
        "x-atlassian-connect-scope": "DELETE"
      }
    }
  }
}
