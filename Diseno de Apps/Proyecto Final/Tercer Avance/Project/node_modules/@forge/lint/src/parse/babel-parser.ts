import { ASTParseResult, ASTParseFunction, ParserTypes } from './parser-interface';

import { parseAsync, traverse } from '@babel/core';
import { TraverseOptions } from '@babel/traverse';

const DEFAULT_BABEL_CONFIG = {
  presets: [
    [
      require.resolve('@babel/preset-typescript'),
      {
        isTSX: true,
        jsxPragma: 'ForgeUI',
        allExtensions: true
      }
    ]
  ],
  plugins: [
    [
      require.resolve('@babel/plugin-transform-react-jsx'),
      {
        pragma: 'ForgeUI.createElement'
      }
    ],
    require.resolve('@forge/babel-plugin-transform-ui'),
    require.resolve('@babel/plugin-proposal-numeric-separator'),
    require.resolve('@babel/plugin-proposal-class-properties')
  ]
};

export const babelParser: ASTParseFunction = async (code: string): Promise<ASTParseResult> => {
  const parsed = await parseAsync(code, DEFAULT_BABEL_CONFIG);
  return {
    type: ParserTypes.Babel,
    parsed,
    traverse: <T = TraverseOptions>(options: T): void => {
      if (parsed) {
        traverse(parsed, options);
      }
    }
  };
};
