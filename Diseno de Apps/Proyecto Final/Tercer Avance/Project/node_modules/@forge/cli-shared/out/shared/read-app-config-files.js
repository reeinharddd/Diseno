"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const array_prototype_flatmap_1 = tslib_1.__importDefault(require("array.prototype.flatmap"));
exports.listGitIgnoreFiles = async (fileSystemReader, gitIgnorePath = '.gitignore') => {
    var _a;
    const gitignoreContents = ((_a = fileSystemReader
        .readFile(gitIgnorePath)) === null || _a === void 0 ? void 0 : _a.trim().split('\n').filter((glob) => glob !== '')) || [];
    return array_prototype_flatmap_1.default(await Promise.all(gitignoreContents.map((glob) => {
        if (fileSystemReader.hasGlobSpecialChars(glob)) {
            return fileSystemReader.readGlob(glob);
        }
        else {
            return [glob];
        }
    })), (x) => x);
};
exports.listTSConfigIncludeExclude = async (fileSystemReader, tsConfigPath = 'tsconfig.json') => {
    var _a, _b;
    const config = fileSystemReader.readFile(tsConfigPath);
    if (config) {
        const tsConfig = JSON.parse(config);
        const include = await Promise.all(((_a = tsConfig === null || tsConfig === void 0 ? void 0 : tsConfig.include) === null || _a === void 0 ? void 0 : _a.map((glob) => fileSystemReader.readGlob(glob))) || []);
        const exclude = await Promise.all(((_b = tsConfig === null || tsConfig === void 0 ? void 0 : tsConfig.exclude) === null || _b === void 0 ? void 0 : _b.map((glob) => fileSystemReader.readGlob(glob))) || []);
        return { include: array_prototype_flatmap_1.default(include, (x) => x), exclude: array_prototype_flatmap_1.default(exclude, (x) => x) };
    }
    return { include: [], exclude: [] };
};
