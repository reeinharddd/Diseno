import { ConfigSectionReader, ConfigSectionWriter } from '../config';
import { Logger } from '../ui';
import { AppDetails } from './app-config';
export interface CreateAppClientInput {
    name: string;
    description?: string;
}
export interface CreateAppClient {
    createApp(input: CreateAppClientInput): Promise<string>;
}
export declare type RegisterAppResult = {
    analytics: {
        appId: string;
        appName: string;
    };
};
export declare class RegisterAppCommand {
    private readonly appClient;
    private readonly appConfigReader;
    private readonly appConfigWriter;
    private readonly logger;
    constructor(appClient: CreateAppClient, appConfigReader: ConfigSectionReader<AppDetails>, appConfigWriter: ConfigSectionWriter<AppDetails>, logger: Logger);
    execute(input: CreateAppClientInput): Promise<RegisterAppResult>;
    isAppAlreadyConfigured(): Promise<string | 'missing'>;
    registerApp(input: CreateAppClientInput, directory: string): Promise<string>;
}
//# sourceMappingURL=register-app.d.ts.map