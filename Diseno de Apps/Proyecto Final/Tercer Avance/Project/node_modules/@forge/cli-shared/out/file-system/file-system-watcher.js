"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs_1 = require("fs");
const minimatch_1 = tslib_1.__importDefault(require("minimatch"));
class FileSystemWithIgnoresWatcher {
    constructor(fileSystemReader) {
        const file = fileSystemReader.readFile('.watchignore');
        if (file) {
            this.ignorePatterns = file.split('\n');
        }
        else {
            this.ignorePatterns = ['.git/*', 'node_modules/*'];
        }
    }
    watchForChanges(relativePath, onChange) {
        this.fsWatcher = fs_1.watch(relativePath, { recursive: true }, async (event, fileName) => {
            if (!this.fileIsIgnored(fileName)) {
                onChange();
            }
        });
    }
    stopWatching() {
        if (this.fsWatcher) {
            this.fsWatcher.close();
            this.fsWatcher = undefined;
        }
    }
    fileIsIgnored(relativePath) {
        for (const pattern of this.ignorePatterns) {
            if (minimatch_1.default(relativePath, pattern)) {
                return true;
            }
        }
        return false;
    }
}
exports.FileSystemWithIgnoresWatcher = FileSystemWithIgnoresWatcher;
