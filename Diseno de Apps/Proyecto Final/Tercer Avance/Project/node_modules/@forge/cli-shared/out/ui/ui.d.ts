import { Logger } from './logger';
import { ProgressResult } from './command-line-ui';
export interface Prompt {
    confirm(message: string): Promise<boolean>;
    promptForText(message: string, defaultValue?: string): Promise<string>;
    promptForSecret(message: string): Promise<string>;
    promptForList(message: string, choices: string[]): Promise<string>;
    promptForTable(message: string, infoMessage: string, columns: string[], choices: object[]): Promise<number[]>;
    promptForSingleChoiceTable(message: string, infoMessage: string, columns: string[], choices: object[]): Promise<number>;
}
export interface UI extends Logger, Prompt {
    emptyLine(): void;
    displayProgress<Result>(progress: () => Promise<Result>, startText: string, successText: string | ((result: Result) => string | ProgressResult)): Promise<Result>;
    displayTemporaryMessage<Result>(progress: () => Promise<Result>, waitText: string): Promise<Result>;
}
//# sourceMappingURL=ui.d.ts.map