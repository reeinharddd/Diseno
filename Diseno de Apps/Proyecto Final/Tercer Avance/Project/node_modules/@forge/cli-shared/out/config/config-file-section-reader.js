"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const t = tslib_1.__importStar(require("io-ts"));
class ConfigFileSectionReader {
    constructor(configReader) {
        this.configReader = configReader;
    }
    async readConfigSection(key, schema) {
        const config = await this.configReader.readConfig();
        const keyedSchema = t.interface({ [key]: schema });
        if (keyedSchema.is(config)) {
            return config[key];
        }
        else if (key in config) {
            return 'invalid';
        }
        else {
            return 'missing';
        }
    }
}
exports.ConfigFileSectionReader = ConfigFileSectionReader;
class ShapedConfigFileSectionReader {
    constructor(configSectionReader, key, schema) {
        this.configSectionReader = configSectionReader;
        this.key = key;
        this.schema = schema;
    }
    readConfigSection() {
        return this.configSectionReader.readConfigSection(this.key, this.schema);
    }
}
exports.configFileReaderForSection = (key, schema, configReader) => {
    return new ShapedConfigFileSectionReader(new ConfigFileSectionReader(configReader), key, schema);
};
