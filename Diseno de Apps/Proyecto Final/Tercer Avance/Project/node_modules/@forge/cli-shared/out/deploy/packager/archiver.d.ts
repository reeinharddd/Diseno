export interface Archiver {
    addFile(fileName: string, contents: string): void;
    addManifestFile(filePath: string): void;
    finalise(): Promise<string>;
    onWarning(cb: (err: Error) => void): void;
    onEntry(cb: (filePath: string) => void): void;
}
export declare class ZipArchiver implements Archiver {
    private archive;
    private tempFile;
    private resolves;
    private rejects;
    constructor();
    addFile(fileName: string, contents: string): void;
    addManifestFile(filePath: string): void;
    finalise(): Promise<string>;
    onWarning(cb: (err: Error) => void): void;
    onEntry(cb: (filePath: string) => void): void;
    private onArchiveError;
    private onClose;
}
//# sourceMappingURL=archiver.d.ts.map