"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("../../graphql");
const ui_1 = require("../../ui");
class NoDeploymentError extends Error {
    constructor() {
        super(ui_1.Text.deploy.error.notFound);
    }
}
exports.NoDeploymentError = NoDeploymentError;
class TriggerDeployGraphQLClient {
    constructor(graphqlClient) {
        this.graphqlClient = graphqlClient;
    }
    async deploy(deploymentDetails) {
        const deployAppQuery = `
      mutation deployApp($input: CreateAppDeploymentInput!) {
        createAppDeployment(input: $input) {
          success
          message
          errorDetails {
            code
          }
          deployment {
            id
          }
        }
      }
    `;
        const { response: { createAppDeployment: { deployment, message, success, errorDetails } }, requestId } = await this.graphqlClient.mutate(deployAppQuery, {
            input: {
                appId: deploymentDetails.appId,
                environmentKey: deploymentDetails.environmentKey,
                artifactUrl: deploymentDetails.artifactUrl
            }
        });
        if (!success) {
            throw new graphql_1.GraphQlMutationError(`${message} (requestId: ${requestId || 'unknown'})`, errorDetails ? errorDetails.code : undefined);
        }
        if (!deployment) {
            throw new NoDeploymentError();
        }
        return deployment.id;
    }
}
exports.TriggerDeployGraphQLClient = TriggerDeployGraphQLClient;
