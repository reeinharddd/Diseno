"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class UnexpectedGraphQlResponseError extends Error {
}
exports.UnexpectedGraphQlResponseError = UnexpectedGraphQlResponseError;
class GraphQlMutationError extends UnexpectedGraphQlResponseError {
    constructor(message, code) {
        super(message);
        this.getCode = () => {
            return this.code;
        };
        this.code = code || 'GENERIC_GRAPHQL_MUTATION_ERROR';
    }
}
exports.GraphQlMutationError = GraphQlMutationError;
class MutationAwareGraphQLClient {
    constructor(runner) {
        this.runner = runner;
    }
    async mutate(query, variables) {
        const { requestId, response } = await this.runner.run(query, variables);
        if (!response) {
            throw new UnexpectedGraphQlResponseError(`(requestId: ${requestId || 'unknown'})`);
        }
        const mutationLabel = Object.keys(response)[0];
        if (!mutationLabel || !response[mutationLabel]) {
            throw new UnexpectedGraphQlResponseError(`(requestId: ${requestId || 'unknown'})`);
        }
        const mutationResponse = response[mutationLabel];
        if (!mutationResponse) {
            throw new UnexpectedGraphQlResponseError(`(requestId: ${requestId || 'unknown'})`);
        }
        return {
            response: { [mutationLabel]: mutationResponse },
            requestId
        };
    }
    async query(query, variables) {
        const { response } = await this.runner.run(query, variables);
        return response;
    }
}
exports.MutationAwareGraphQLClient = MutationAwareGraphQLClient;
