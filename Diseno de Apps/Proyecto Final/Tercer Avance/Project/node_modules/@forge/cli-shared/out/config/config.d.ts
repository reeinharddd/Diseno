export declare const manifestFilename = "manifest.yml";
export declare const FUNCTIONS_KEY = "function";
export interface BaseModule {
    key: string;
}
export interface FunctionDefinition extends BaseModule {
    handler: string;
}
export interface WebTrigger extends BaseModule {
    function: string;
}
export interface Macro extends BaseModule {
    function: string;
    title: string;
    description?: string;
}
export declare type JiraIssuePanel = Macro;
export interface JiraWorkflowValidator extends BaseModule {
    function: string;
    name: string;
    description?: string;
}
export declare type Module = Macro | WebTrigger | FunctionDefinition | JiraIssuePanel | JiraWorkflowValidator;
export interface Modules {
    [key: string]: Module[] | undefined;
    webtrigger?: WebTrigger[];
    [FUNCTIONS_KEY]?: FunctionDefinition[];
    macro?: Macro[];
}
export interface Manifest {
    modules?: Modules;
    permissions?: {
        scopes: string[];
    };
    app?: AppConfig;
}
interface RuntimeConfig {
    snapshots: boolean;
}
export interface AppConfig {
    [key: string]: any;
    id?: string;
    name?: string;
    description?: string;
    runtime?: RuntimeConfig;
}
export interface ConfigReader {
    readConfig(): Promise<Manifest>;
}
export interface ConfigWriter {
    writeToConfigFile<K extends string, V extends object>(configKey: K, config: V): Promise<void>;
}
export {};
//# sourceMappingURL=config.d.ts.map