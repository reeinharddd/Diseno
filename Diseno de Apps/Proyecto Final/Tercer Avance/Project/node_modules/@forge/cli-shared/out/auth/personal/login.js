"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const me_graphql_client_1 = require("./me-graphql-client");
const token_authenticator_1 = require("./token-authenticator");
class LoginCommand {
    constructor(createGraphQLClient, store, logger) {
        this.createGraphQLClient = createGraphQLClient;
        this.store = store;
        this.logger = logger;
    }
    async execute(credentials) {
        const user = await this.getUser(credentials);
        const creds = Object.assign(Object.assign({}, credentials), { accountId: user.accountId });
        await this.store.setCredentials(creds);
        return {
            user,
            creds,
            analytics: {
                userId: creds.accountId
            }
        };
    }
    async getUser(credentials) {
        const authenticator = new token_authenticator_1.PersonalTokenAuthenticator({
            getCredentials: () => Promise.resolve(Object.assign(Object.assign({}, credentials), { accountId: '' })),
            getInstructionsWhenInvalid: this.store.getInstructionsWhenInvalid
        });
        const graphqlClient = this.createGraphQLClient(authenticator);
        const meClient = new me_graphql_client_1.MeGraphqlClient(graphqlClient, this.logger);
        return await meClient.getUser();
    }
}
exports.LoginCommand = LoginCommand;
